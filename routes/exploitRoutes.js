const express = require('express');
const multer = require('multer');
const shell = require('shelljs');
const path = require('path');
const fs = require('fs');

const router = express.Router();

// Configuración de Multer para almacenamiento en memoria
const storage = multer.memoryStorage();
const upload = multer({ storage });

// Endpoint para subir el archivo
router.post('/upload', upload.single('file'), (req, res) => {
  try {
    if (!req.file) {
      return res.status(400).json({ error: 'Archivo no subido' });
    }

    // Guardar el archivo cargado en memoria en el sistema temporalmente
    const filePath = `/tmp/${req.file.originalname}`;
    fs.writeFileSync(filePath, req.file.buffer);

    res.json({
      message: 'Archivo subido correctamente',
      filePath,
    });
  } catch (error) {
    console.error('Error al subir el archivo:', error);
    res.status(500).json({ error: 'Error interno del servidor' });
  }
});

// Endpoint para ejecutar el archivo
router.post('/execute', (req, res) => {
  const { filePath } = req.body;

  try {
    if (!filePath || !shell.test('-f', filePath)) {
      return res.status(400).json({ error: 'Archivo no encontrado o inválido' });
    }

    // Dar permisos de ejecución al archivo
    shell.chmod('+x', filePath);

    // Ejecutar el archivo
    const output = shell.exec(filePath);

    res.json({
      message: 'Archivo ejecutado exitosamente',
      output: output.stdout || output.stderr,
    });
  } catch (error) {
    console.error('Error al ejecutar el archivo:', error);
    res.status(500).json({ error: 'Error interno del servidor' });
  }
});

module.exports = router;
